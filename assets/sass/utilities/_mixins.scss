// MIXINS
//@import "math";
//
//@mixin ieRotate($degrees) {
//    filter: progid:DXImageTransform.Microsoft.matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=-#{sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)});
//    -ms-filter: "progid:DXImageTransform.Microsoft.matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=-#{sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)})";
//    zoom: 1;
//}

@mixin clearfix() {
    &::after {
        clear: both;
        content: " ";
        display: table;
    }
}

@mixin letter-spacing($letter-spacing, $font-size, $unit: px) {
    @if ($unit == px) {
        letter-spacing: #{($letter-spacing * $font-size / 1000) * 1px};
    } @else if ($unit == em) {
        letter-spacing: #{($letter-spacing / 1000) * 1em};
    }
}

@mixin responsive-font-size($font-size-min, $font-size-max, $viewport-width-min, $viewport-width-max, $fallback: false) {
    font-size: $font-size-min;

    @media (min-width: $viewport-width-min) and (max-width: $viewport-width-max - 1) {

        @if ($fallback) {
            font-size: $fallback;
        }

        font-size: calc-responsive-font-size($font-size-min, $font-size-max, $viewport-width-min, $viewport-width-max);
    }

    @media (min-width: $viewport-width-max) {
        font-size: $font-size-max;
    }
}

@mixin responsive-headers() {

    @each $name, $value in $headers-map {
        #{$name} {
            font-size: round(map-get($value, fons-size-min));
        }
    }

    $viewport-min: map-get($viewport-map, viewport-min);
    $viewport-max: map-get($viewport-map, viewport-max);

    @media (min-width: $viewport-min) and (max-width: $viewport-max - 1) {

        @each $name, $value in $headers-map {
            #{$name} {

                $fallback: map-get($value, font-size-fallback);

                @if ($fallback != null and $fallback != "") {
                    font-size: $fallback;
                }

                font-size: calc-responsive-font-size(map-get($value, fons-size-min), map-get($value, font-size-max), $viewport-min, $viewport-max);
            }
        }

    }

    @media (min-width: $viewport-max) {
        @each $name, $value in $headers-map {
            #{$name} {
                font-size: round(map-get($value, font-size-max));
            }
        }
    }
}
